---
- name: Create a VM from a template
  hosts: localhost
  connection: local
  gather_facts: no
  vars:
    vcenter_host: "https://vcenter.home.ins"
    vcenter_user: '{{ lookup("env", "VMWARE_USER") }}'
    vcenter_pass: '{{ lookup("env", "VMWARE_PASSWORD") }}'
    vmname: "{{ lookup('community.general.random_pet', words=3) }}"
    cvmname: "test"
  tasks:
  - name: Create Windows VM from Template
    community.vmware.vmware_guest:
#      hostname: "{{ vcenter_host }}"
#      username: "{{ vcenter_user }}"
#      password: "{{ vcenter_pass }}"
#     vcenter_host: "{{ lookup("env", "VMWARE_HOST") }}"
      validate_certs: false
      name: "{{ cvmname }}" 
      annotation: " Created by Ansible "
      template: "RHEL9.2_Template"
      cluster: "cluster"
      datacenter: "HomeDC"
      folder: "/HomeDC/vm/AAP"
      state: poweredon
      disk:
      - size_gb: "50"
        type: thin
        datastore: "Datastore-truenas"
      - size_gb: "10"
        type: thin
        datastore: "Datastore-truenas"
      hardware:
        num_cpus: "4"
        memory_mb: "4096"
      networks:
        - name: "SharedServices.200" 
          type: static
          ip: "10.0.200.90"
          netmask: "255.255.255.0"
          gateway: "10.0.200.254"
          dns_servers: "10.0.0.4"
          wait_for_ip_address: true
          wait_for_ip_address_timeout: 300
          connected: true
          start_connected: true
      customization:
        dns_servers: "10.0.0.4"
        domain: "home.ins"
    delegate_to: localhost

  - name: Connect Network to VM
    community.vmware.vmware_guest_network:
      datacenter: "HomeDC"
      name: "{{ cvmname }}"
      network_name: "SharedServices.200"
      state: present
      connected: true
     
#  - name: Add the deployed hosts to AAP
#    ansible.controller.host:
#      controller_host: aap-con-mv3.als.local
#      validate_certs: no
#      controller_oauthtoken: "{{ aap_token }}"
#      name: "{{ vmparams['name'] }}"
#      inventory: "Deployed by AAP"
#      state: present
#      enabled: true
#      variables: # TODO: Make them real variables based on VM inputs
#        Criticality: "No" #Always No from our side
#        OS_Platform: "{{ os.split(' ')[0] }}"
#        Owner: "{{ vm_owner }}"
#        Notes: "{{ server_role }}"
#        added_to_d42: "no"
# 
# 
